@model _70322_Yushkevich.Models.PageListViewModel<_70322_Yushkevich.DAL.Entities.Dish>
@using System.Text
@{
    var groupName = Request.RequestContext.RouteData.Values["group"]; //Лаб5
    var result = new StringBuilder();

    // стрелка влево
    var liPrevNext = new TagBuilder("li");
    liPrevNext.InnerHtml = Ajax.ActionLink("<<", "List",
    new
    {
        group = groupName,
        page = Model.CurrentPage - 1
    },
   new AjaxOptions
   {
       InsertionMode = InsertionMode.Replace,
       UpdateTargetId = "List"
   })
    .ToString();
    if (Model.CurrentPage == 1)
    {
        liPrevNext.AddCssClass("disabled");
    }
    result.Append(liPrevNext.ToString());

    // пейджер
    for (int i = 1; i <= Model.TotalPages; i++)
    {
        var li = new TagBuilder("li");
        if (i == Model.CurrentPage)
        {
            li.AddCssClass("active");
        }

        li.InnerHtml = Ajax.RouteLink(i.ToString(),
        new
        {
            action = "List",
            group = groupName,
            page = i
        },
        new AjaxOptions
        {
            UpdateTargetId = "List",
            InsertionMode = InsertionMode.Replace
        }).ToString();
        result.Append(li.ToString());
    }

    // стрелка вправо
    liPrevNext = new TagBuilder("li");
    liPrevNext.InnerHtml = Ajax.ActionLink(">>", "List",
    new
    {
        group = groupName,
        page = Model.CurrentPage + 1
    },
new AjaxOptions
{
    InsertionMode = InsertionMode.Replace,
    UpdateTargetId = "List"
}).ToString();
    if (Model.CurrentPage == Model.TotalPages)
    {
        liPrevNext.AddCssClass("disabled");
    }
    result.Append(liPrevNext.ToString());
}

<ul class="pagination">
    @MvcHtmlString.Create(result.ToString())
</ul>














@*// стрелка влево
                    var liPrevNext = new TagBuilder("li");
        if (Model.CurrentPage == 1)
        {
            liPrevNext.AddCssClass("disabled");
            liPrevNext.InnerHtml = Ajax.ActionLink("<<", "List", new
            {
                page = Model.CurrentPage
            })
        .ToString();
            //result.Append(liPrevNext.ToString());
        }
        else
        {
            liPrevNext.InnerHtml = Ajax.ActionLink("<<", "List", new
            {
                group = groupName,
                page = Model.CurrentPage - 1
            })
        .ToString();
            //result.Append(liPrevNext.ToString());
        }
        result.Append(liPrevNext.ToString());

        // пейджер
        for (int i = 1; i <= Model.TotalPages; i++)
        {
            var li = new TagBuilder("li");
            if (i == Model.CurrentPage) { li.AddCssClass("active"); }

            li.InnerHtml = Ajax.RouteLink(i.ToString(),
                 new
                 {
                     action = "List",
                     group = groupName,
                     page = i
                 },
                new AjaxOptions
                {
                    UpdateTargetId = "List",
                    InsertionMode = InsertionMode.Replace
                }).ToString();

            //var a = new TagBuilder("a");
            //a.MergeAttribute("href", Url.Action("List", new
            //{
            //    page = i
            //}));
            //a.InnerHtml = i.ToString();
            //li.InnerHtml = a.ToString();

            result.Append(li.ToString());
        }


        // стрелка вправо
        liPrevNext = new TagBuilder("li");
        if (Model.CurrentPage == Model.TotalPages)
        {
            liPrevNext.AddCssClass("disabled");
            liPrevNext.InnerHtml = Ajax.ActionLink(">>", "List", new
            {
                page = Model.CurrentPage
            })
        .ToString();
            result.Append(liPrevNext.ToString());
        }
        else
        {
            liPrevNext.InnerHtml = Ajax.ActionLink(">>", "List", new
            {
                group = groupName,
                page = Model.CurrentPage + 1
            })
            .ToString();
            result.Append(liPrevNext.ToString());
        }
            }

    <ul class="pagination">
        @MvcHtmlString.Create(result.ToString())
    </ul>*@
